{
	"info": {
		"_postman_id": "3f11c314-0d82-4a7f-a211-522500c0bb19",
		"name": "mainzelliste_decrypt_JCE",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "NEW_SESSION",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "4980a145-aa19-4237-85f7-6e68b8290f59",
						"exec": [
							"console.log(\"newSession\")",
							"var jsonBody = JSON.parse(responseBody);",
							"",
							"tests[\"Session created\"] = responseCode.code === 201;",
							"tests[\"Body has sessionId\"] = responseBody.has(\"sessionId\");",
							"tests[\"Body has uri\"] = responseBody.has(\"uri\");",
							"",
							"var sessionId = jsonBody.sessionId;",
							"postman.setGlobalVariable(\"sessionId\", sessionId);",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "mainzellisteApiKey",
						"value": "{{mainzellisteApiKey}}"
					},
					{
						"key": "mainzellisteApiVersion",
						"value": "{{mainzellisteApiVersion}}"
					}
				],
				"url": {
					"raw": "{{url}}/sessions",
					"host": [
						"{{url}}"
					],
					"path": [
						"sessions"
					]
				}
			},
			"response": []
		},
		{
			"name": "TOKEN_ADD_PATIENT",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "76603d3f-0811-44e2-843b-66f478313b0e",
						"exec": [
							"var jsonBody = JSON.parse(responseBody);",
							"console.log(jsonBody);",
							"tests[\"Token created\"] = responseCode.code === 201;",
							"tests[\"Body has id\"] = responseBody.has(\"id\");",
							"tests[\"Type is addPatient\"] = jsonBody.type === \"addPatient\";",
							"tests[\"Body has data\"] = responseBody.has(\"data\");",
							"tests[\"Data has idTypes\"] = \"idTypes\" in jsonBody.data;",
							"",
							"var tokenId = jsonBody.id;",
							"postman.setGlobalVariable(\"tokenId\", tokenId);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "mainzellisteApiKey",
						"value": "{{mainzellisteApiKey}}"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "mainzellisteApiVersion",
						"value": "{{mainzellisteApiVersion}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n\t\"type\": \"addPatient\",\r\n     \t\"data\": {\r\n     \t\t\"idtypes\": [\"pid\",\"ctsid\"]\r\n    \t}\r\n}"
				},
				"url": {
					"raw": "{{url}}/sessions/{{sessionId}}/tokens",
					"host": [
						"{{url}}"
					],
					"path": [
						"sessions",
						"{{sessionId}}",
						"tokens"
					]
				}
			},
			"response": []
		},
		{
			"name": "ADD_PATIENT_JSON",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "1494c162-700b-4c05-a2b5-3b1286d38cd4",
						"exec": [
							"var jsonBody = JSON.parse(responseBody);",
							"console.log(jsonBody);",
							"tests[\"Patient created\"] = responseCode.code === 201;",
							"var enc_ctsid;",
							"",
							"if (jsonBody[0].idType === \"pid\") {",
							"    postman.setGlobalVariable(\"pid\", jsonBody[0].idString);",
							"    enc_ctsid = jsonBody[1].idString;",
							"}",
							"if (jsonBody[1].idType === \"pid\") {",
							"    postman.setGlobalVariable(\"pid\", jsonBody[1].idString);",
							"    enc_ctsid = jsonBody[0].idString;",
							"}",
							"",
							"tests[\"ctsid generated\"] = enc_ctsid != null;",
							"tests[\"ctsid encrypted\"] = enc_ctsid.length > 8;",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "mainzellisteApiKey",
						"value": "{{mainzellisteApiKey}}"
					},
					{
						"key": "Content-Type",
						"value": "application/x-www-form-urlencoded"
					},
					{
						"key": "mainzellisteApiVersion",
						"value": "{{mainzellisteApiVersion}}"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "vorname",
							"value": "{{vorname}}",
							"type": "text"
						},
						{
							"key": "nachname",
							"value": "{{nachname}}",
							"type": "text"
						},
						{
							"key": "geburtstag",
							"value": "{{geburtstag}}",
							"type": "text"
						},
						{
							"key": "geburtsmonat",
							"value": "{{geburtsmonat}}",
							"type": "text"
						},
						{
							"key": "geburtsjahr",
							"value": "{{geburtsjahr}}",
							"type": "text"
						},
						{
							"key": "geburtsort",
							"value": "{{ort}}",
							"type": "text"
						},
						{
							"key": "extid",
							"value": "2222222222",
							"type": "text",
							"disabled": true
						},
						{
							"key": "sureness",
							"value": "true",
							"type": "text",
							"disabled": true
						}
					]
				},
				"url": {
					"raw": "{{url}}/patients?tokenId={{tokenId}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"patients"
					],
					"query": [
						{
							"key": "tokenId",
							"value": "{{tokenId}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "TOKEN_GET_PATIENT",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "cfe51367-f51f-4a03-bfe3-f24b95e78f60",
						"exec": [
							"console.log(\"New TOKEN (readPatient)\")",
							"",
							"var jsonBody = JSON.parse(responseBody);",
							"console.log(jsonBody);",
							"tests[\"Token created\"] = responseCode.code === 201;",
							"tests[\"Body has id\"] = responseBody.has(\"id\");",
							"tests[\"Type is readPatients\"] = jsonBody.type === \"readPatients\";",
							"tests[\"Body has data\"] = responseBody.has(\"data\");",
							"",
							"var tokenId = jsonBody.id;",
							"postman.setGlobalVariable(\"tokenId\", tokenId);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "mainzellisteApiKey",
						"value": "{{mainzellisteApiKey}}"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "mainzellisteApiVersion",
						"value": "{{mainzellisteApiVersion}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n\t\"type\": \"readPatients\",\r\n \t\"data\": {\r\n\t \t\"searchIds\": [\r\n\t \t\t{\r\n\t \t\t\t\"idType\":\"ctsid\",\r\n\t \t\t\t\"idString\":\"lIw5UZaZjbFd0j6to47pznb3oy3bCiwwcaGOxSYXwJuv08DqURL6-VFOrl9tBAcP4pv1q-rGBMaWbkcUkXgmy8MgbzMpUTZKvnlflObl7f0PCXXooasPh6fmfpjt4sBEjzrrA2Lyp_R-x0E3h41dAxCWP0QTzC1Awc6m3ZBwdck\"\r\n\t \t\t}\r\n\t\t],\r\n\t\t\"resultIds\":[\"pid\"]\r\n\r\n \t}\r\n}"
				},
				"url": {
					"raw": "{{url}}/sessions/{{sessionId}}/tokens",
					"host": [
						"{{url}}"
					],
					"path": [
						"sessions",
						"{{sessionId}}",
						"tokens"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET_PATIENT",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "940d73b3-b8c1-4a8b-b9de-2734a77a127b",
						"exec": [
							"console.log(\"GET Patient\")",
							"",
							"var jsonBody = JSON.parse(responseBody);",
							"console.log(jsonBody);",
							"var pidString = postman.getGlobalVariable(\"pid\");",
							"",
							"tests[\"patient found\"] = responseCode.code === 200;",
							"tests[\"patient has correct id\"] = jsonBody[0].ids[0].idString === pidString;",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "mainzellisteApiKey",
						"value": "{{mainzellisteApiKey}}"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "mainzellisteApiVersion",
						"value": "{{mainzellisteApiVersion}}"
					}
				],
				"url": {
					"raw": "{{url}}/patients/tokenId/{{tokenId}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"patients",
						"tokenId",
						"{{tokenId}}"
					]
				}
			},
			"response": []
		}
	],
	"protocolProfileBehavior": {}
}