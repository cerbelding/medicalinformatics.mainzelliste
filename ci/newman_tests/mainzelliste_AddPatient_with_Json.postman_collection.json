{
	"info": {
		"_postman_id": "55be69b4-1d6d-4efb-a963-6c955076800b",
		"name": "mainzelliste_AddPatient_with_Json",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "NEW_SESSION",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"console.log(\"newSession\")",
							"var jsonBody = JSON.parse(responseBody);",
							"",
							"tests[\"Session created\"] = responseCode.code === 201;",
							"tests[\"Body has sessionId\"] = responseBody.has(\"sessionId\");",
							"tests[\"Body has uri\"] = responseBody.has(\"uri\");",
							"",
							"var sessionId = jsonBody.sessionId;",
							"postman.setGlobalVariable(\"sessionId\", sessionId);",
							"",
							""
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "mainzellisteApiKey",
						"value": "{{mainzellisteApiKey}}"
					},
					{
						"key": "mainzellisteApiVersion",
						"value": "{{mainzellisteApiVersion}}"
					}
				],
				"url": {
					"raw": "{{url}}/sessions",
					"host": [
						"{{url}}"
					],
					"path": [
						"sessions"
					]
				}
			},
			"response": []
		},
		{
			"name": "TOKEN_ADD_PATIENT",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonBody = JSON.parse(responseBody);",
							"console.log(jsonBody);",
							"tests[\"Token created\"] = responseCode.code === 201;",
							"tests[\"Body has id\"] = responseBody.has(\"id\");",
							"tests[\"Type is addPatient\"] = jsonBody.type === \"addPatient\";",
							"tests[\"Body has data\"] = responseBody.has(\"data\");",
							"tests[\"Data has idTypes\"] = \"idTypes\" in jsonBody.data;",
							"",
							"var tokenId = jsonBody.id;",
							"postman.setGlobalVariable(\"tokenId\", tokenId);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "mainzellisteApiKey",
						"value": "{{mainzellisteApiKey}}"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "mainzellisteApiVersion",
						"value": "{{mainzellisteApiVersion}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n\t\"type\": \"addPatient\",\r\n     \t\"data\": {\r\n     \t\t\"idtypes\": [{{idTypes}}, \"exportId\", \"extID\"]\r\n    \t}\r\n}"
				},
				"url": {
					"raw": "{{url}}/sessions/{{sessionId}}/tokens",
					"host": [
						"{{url}}"
					],
					"path": [
						"sessions",
						"{{sessionId}}",
						"tokens"
					]
				}
			},
			"response": []
		},
		{
			"name": "ADD_PATIENT_JSON",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonBody = JSON.parse(responseBody);",
							"console.log(jsonBody);",
							"tests[\"Patient created\"] = responseCode.code === 201;",
							"tests[\"idType is pid\"] = jsonBody[0].idType === \"pid\";",
							"tests[\"Element has idString\"] = \"idString\" in jsonBody[0];",
							"tests[\"Element has tentative\"] = \"tentative\" in jsonBody[0];",
							"tests[\"Element has uri\"] = \"uri\" in jsonBody[0];",
							"",
							"tests[\"is exportId created?\"] = jsonBody[2].idType === \"exportId\";",
							"tests[\"is exportId encrypted?\"] = jsonBody[2].idString.length > 30;",
							"tests[\"is exportId in uri encrypted?\"] = jsonBody[2].uri.match(/\\/([^/]+)$/)[1].length > 30;",
							"",
							"tests[\"is extId created?\"] = jsonBody[1].idType === \"extID\";",
							"tests[\"is extId created?\"] = jsonBody[1].idString === \"2222222222\";",
							"",
							"postman.setGlobalVariable(\"idType\", \"pid\")",
							"postman.setGlobalVariable(\"idString\", jsonBody[0].idString);",
							"pm.variables.set(\"exportId\", jsonBody[2]);",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "mainzellisteApiKey",
						"value": "{{mainzellisteApiKey}}"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "mainzellisteApiVersion",
						"value": "{{mainzellisteApiVersion}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"fields\": {\r\n    \"vorname\": \"{{vorname}}\",\r\n    \"nachname\": \"{{nachname}}\",\r\n    \"geburtsname\": \"{{geburtsname}}\",\r\n    \"geburtstag\": \"{{geburtstag}}\",\r\n    \"geburtsmonat\": \"{{geburtsmonat}}\",\r\n    \"geburtsjahr\": \"{{geburtsjahr}}\",\r\n    \"plz\": \"{{plz}}\",\r\n    \"ort\": \"{{ort}}\"\r\n  },\r\n  \"ids\": {\r\n    \"extID\": \"2222222222\"\r\n  },\r\n  \"sureness\": \"true\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/patients?tokenId={{tokenId}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"patients"
					],
					"query": [
						{
							"key": "tokenId",
							"value": "{{tokenId}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "TOKEN_ADD_PATIENT_INTID_EXTID",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonBody = JSON.parse(responseBody);",
							"console.log(jsonBody);",
							"tests[\"Token created\"] = responseCode.code === 201;",
							"tests[\"Body has id\"] = responseBody.has(\"id\");",
							"tests[\"Type is addPatient\"] = jsonBody.type === \"addPatient\";",
							"tests[\"Body has data\"] = responseBody.has(\"data\");",
							"tests[\"Data has idTypes\"] = \"idTypes\" in jsonBody.data;",
							"",
							"var tokenId = jsonBody.id;",
							"postman.setGlobalVariable(\"tokenId\", tokenId);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "mainzellisteApiKey",
						"value": "{{mainzellisteApiKey}}"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "mainzellisteApiVersion",
						"value": "{{mainzellisteApiVersion}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n\t\"type\": \"addPatient\",\r\n     \t\"data\": {\r\n     \t\t\"idtypes\": [\"intid\", \"extID\"]\r\n    \t}\r\n}"
				},
				"url": {
					"raw": "{{url}}/sessions/{{sessionId}}/tokens",
					"host": [
						"{{url}}"
					],
					"path": [
						"sessions",
						"{{sessionId}}",
						"tokens"
					]
				}
			},
			"response": []
		},
		{
			"name": "ADD_INTID_TO_PATIENT_FOUNDED_WITH_EXTID",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonBody = JSON.parse(responseBody);",
							"console.log(jsonBody);",
							"tests[\"Patient found with the given extID?\"] = jsonBody[1].idType === \"extID\" && jsonBody[1].idString === \"2222222222\";",
							"",
							"tests[\"Patient created\"] = responseCode.code === 201;",
							"tests[\"idType is intid\"] = jsonBody[0].idType === \"intid\";",
							"tests[\"Element has idString\"] = \"idString\" in jsonBody[0];",
							"tests[\"Element has tentative\"] = \"tentative\" in jsonBody[0];",
							"tests[\"Element has uri\"] = \"uri\" in jsonBody[0];",
							"",
							"postman.setGlobalVariable(\"intidValue\", jsonBody[0].idString);",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "mainzellisteApiKey",
						"value": "{{mainzellisteApiKey}}"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "mainzellisteApiVersion",
						"value": "{{mainzellisteApiVersion}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"fields\": {\r\n    \"vorname\": \"{{vorname}}\",\r\n    \"nachname\": \"{{nachname}}\",\r\n    \"geburtsname\": \"{{geburtsname}}\",\r\n    \"geburtstag\": \"{{geburtstag}}\",\r\n    \"geburtsmonat\": \"{{geburtsmonat}}\",\r\n    \"geburtsjahr\": \"{{geburtsjahr}}\",\r\n    \"plz\": \"{{plz}}\",\r\n    \"ort\": \"{{ort}}\"\r\n  },\r\n  \"ids\": {\r\n    \"extID\": \"2222222222\"\r\n  },\r\n  \"sureness\": \"false\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/patients?tokenId={{tokenId}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"patients"
					],
					"query": [
						{
							"key": "tokenId",
							"value": "{{tokenId}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "TOKEN_READ_PATIENT_WITH_INTID",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonBody = JSON.parse(responseBody);",
							"console.log(jsonBody);",
							"tests[\"Token created\"] = responseCode.code === 201;",
							"tests[\"Body has id\"] = responseBody.has(\"id\");",
							"tests[\"Type is readPatients\"] = jsonBody.type === \"readPatients\";",
							"tests[\"Body has data\"] = responseBody.has(\"data\");",
							"",
							"var tokenId = jsonBody.id;",
							"postman.setGlobalVariable(\"tokenId\", tokenId);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "mainzellisteApiKey",
						"value": "{{mainzellisteApiKey}}"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "mainzellisteApiVersion",
						"value": "{{mainzellisteApiVersion}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n\t\"type\": \"readPatients\",\r\n \t\"data\": {\r\n\t \t\"searchIds\": [\r\n\t \t\t{\r\n\t \t\t\t\"idType\":\"intid\",\r\n\t \t\t\t\"idString\":\"{{intidValue}}\"\r\n\t \t\t}\r\n\t\t],\r\n\t\t\"resultFields\": [\"vorname\", \"nachname\", \"geburtsname\", \"geburtstag\", \"geburtsmonat\", \"geburtsjahr\", \"plz\", \"ort\"],\r\n\t\t\"resultIds\":[\"intid\"]\r\n \t}\r\n}"
				},
				"url": {
					"raw": "{{url}}/sessions/{{sessionId}}/tokens",
					"host": [
						"{{url}}"
					],
					"path": [
						"sessions",
						"{{sessionId}}",
						"tokens"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET_PATIENT_WITH_INTID",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonBody = JSON.parse(responseBody);",
							"console.log(jsonBody);",
							"",
							"tests[\"patient found\"] = responseCode.code === 200;",
							"tests[\"patient vorname matches\"] = jsonBody[0].fields.vorname === pm.variables.get(\"vorname\");",
							"tests[\"patient nachname matches\"] = jsonBody[0].fields.nachname === pm.variables.get(\"nachname\");",
							"tests[\"patient geburtsname matches\"] = jsonBody[0].fields.geburtsname === pm.variables.get(\"geburtsname\");",
							"tests[\"patient geburtstag matches\"] = jsonBody[0].fields.geburtstag === pm.variables.get(\"geburtstag\");",
							"tests[\"patient geburtsmonat matches\"] = jsonBody[0].fields.geburtsmonat == pm.variables.get(\"geburtsmonat\");",
							"tests[\"patient geburtsjahr matches\"] = jsonBody[0].fields.geburtsjahr === pm.variables.get(\"geburtsjahr\");",
							"tests[\"patient plz matches\"] = jsonBody[0].fields.plz === pm.variables.get(\"plz\");",
							"tests[\"patient ort matches\"] = jsonBody[0].fields.ort === pm.variables.get(\"ort\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "mainzellisteApiKey",
						"value": "{{mainzellisteApiKey}}"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "mainzellisteApiVersion",
						"value": "{{mainzellisteApiVersion}}"
					}
				],
				"url": {
					"raw": "{{url}}/patients/tokenId/{{tokenId}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"patients",
						"tokenId",
						"{{tokenId}}"
					]
				}
			},
			"response": []
		}
	]
}