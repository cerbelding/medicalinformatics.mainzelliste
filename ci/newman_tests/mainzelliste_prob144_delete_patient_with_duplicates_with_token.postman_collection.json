{
	"info": {
		"_postman_id": "167eea14-0b19-43ce-8271-da042d23ddfd",
		"name": "mainzelliste_prob144_delete_patient_with_duplicates_with_token",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "NEW_SESSION",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"console.log(\"New Session\")",
							"",
							"var jsonBody = JSON.parse(responseBody);",
							"console.log(jsonBody);",
							"tests[\"Session created\"] = responseCode.code === 201;",
							"tests[\"Body has sessionId\"] = responseBody.has(\"sessionId\");",
							"tests[\"Body has uri\"] = responseBody.has(\"uri\");",
							"",
							"var sessionId = jsonBody.sessionId;",
							"postman.clearGlobalVariable(\"sessionId\");",
							"postman.setGlobalVariable(\"sessionId\", sessionId);",
							"",
							"",
							""
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "mainzellisteApiKey",
						"value": "{{mainzellisteApiKey}}"
					},
					{
						"key": "mainzellisteApiVersion",
						"value": "{{mainzellisteApiVersion}}"
					}
				],
				"url": {
					"raw": "{{url}}/sessions",
					"host": [
						"{{url}}"
					],
					"path": [
						"sessions"
					]
				}
			},
			"response": []
		},
		{
			"name": "TOKEN_ADD_PATIENT",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"console.log(\"Token add Patient\")",
							"",
							"var jsonBody = JSON.parse(responseBody);",
							"console.log(jsonBody);",
							"tests[\"Token created\"] = responseCode.code === 201;",
							"tests[\"Body has id\"] = responseBody.has(\"id\");",
							"tests[\"Type is addPatient\"] = jsonBody.type === \"addPatient\";",
							"tests[\"Body has data\"] = responseBody.has(\"data\");",
							"tests[\"Data has idTypes\"] = \"idTypes\" in jsonBody.data;",
							"",
							"var tokenId = jsonBody.id;",
							"postman.setGlobalVariable(\"tokenId\", tokenId);"
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "mainzellisteApiKey",
						"value": "{{mainzellisteApiKey}}"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "mainzellisteApiVersion",
						"value": "{{mainzellisteApiVersion}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n\t\"type\": \"addPatient\",\r\n     \t\"data\": {\r\n     \t\t\"idtypes\": [{{idTypes}}]\r\n    \t}\r\n}"
				},
				"url": {
					"raw": "{{url}}/sessions/{{sessionId}}/tokens",
					"host": [
						"{{url}}"
					],
					"path": [
						"sessions",
						"{{sessionId}}",
						"tokens"
					]
				}
			},
			"response": []
		},
		{
			"name": "ADD_PATIENT_JSON",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"console.log(\"Add Patient\")",
							"",
							"var jsonBody = JSON.parse(responseBody);",
							"console.log(jsonBody);",
							"tests[\"Patient created\"] = responseCode.code === 201;",
							"tests[\"idType is pid\"] = jsonBody[0].idType === \"pid\";",
							"tests[\"Element has idString\"] = \"idString\" in jsonBody[0];",
							"tests[\"Element has tentative\"] = \"tentative\" in jsonBody[0];",
							"tests[\"Element has uri\"] = \"uri\" in jsonBody[0];",
							"",
							"postman.setGlobalVariable(\"idType\", \"pid\")",
							"postman.setGlobalVariable(\"idString\", jsonBody[0].idString);"
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "mainzellisteApiKey",
						"value": "{{mainzellisteApiKey}}"
					},
					{
						"key": "Content-Type",
						"value": "application/x-www-form-urlencoded"
					},
					{
						"key": "mainzellisteApiVersion",
						"value": "{{mainzellisteApiVersion}}"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "vorname",
							"value": "{{vorname}}",
							"type": "text"
						},
						{
							"key": "nachname",
							"value": "{{nachname}}",
							"type": "text"
						},
						{
							"key": "geburtsname",
							"value": "{{geburtsname}}",
							"type": "text"
						},
						{
							"key": "geburtstag",
							"value": "{{geburtstag}}",
							"type": "text"
						},
						{
							"key": "geburtsmonat",
							"value": "{{geburtsmonat}}",
							"type": "text"
						},
						{
							"key": "geburtsjahr",
							"value": "{{geburtsjahr}}",
							"type": "text"
						},
						{
							"key": "plz",
							"value": "{{plz}}",
							"type": "text"
						},
						{
							"key": "ort",
							"value": "{{ort}}",
							"type": "text"
						},
						{
							"key": "extid",
							"value": "{{Mobil}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{url}}/patients?tokenId={{tokenId}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"patients"
					],
					"query": [
						{
							"key": "tokenId",
							"value": "{{tokenId}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "NEW_SESSION",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"console.log(\"New Session\")",
							"",
							"var jsonBody = JSON.parse(responseBody);",
							"console.log(jsonBody);",
							"tests[\"Session created\"] = responseCode.code === 201;",
							"tests[\"Body has sessionId\"] = responseBody.has(\"sessionId\");",
							"tests[\"Body has uri\"] = responseBody.has(\"uri\");",
							"",
							"var sessionId = jsonBody.sessionId;",
							"postman.clearGlobalVariable(\"sessionId\");",
							"postman.setGlobalVariable(\"sessionId\", sessionId);",
							"",
							"",
							""
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "mainzellisteApiKey",
						"value": "{{mainzellisteApiKey}}"
					},
					{
						"key": "mainzellisteApiVersion",
						"value": "{{mainzellisteApiVersion}}"
					}
				],
				"url": {
					"raw": "{{url}}/sessions",
					"host": [
						"{{url}}"
					],
					"path": [
						"sessions"
					]
				}
			},
			"response": []
		},
		{
			"name": "NEW_TOKEN (deletePatient) - Token anlegen copy",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"console.log(\"New TOKEN (deletePatient)\")",
							"",
							"var jsonBody = JSON.parse(responseBody);",
							"console.log(jsonBody);",
							"tests[\"Token created\"] = responseCode.code === 201;",
							"tests[\"Body has id\"] = responseBody.has(\"id\");",
							"tests[\"Type is readPatients\"] = jsonBody.type === \"deletePatient\";",
							"tests[\"Body has data\"] = responseBody.has(\"data\");",
							"",
							"var tokenId = jsonBody.id;",
							"postman.setGlobalVariable(\"tokenId\", tokenId);"
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "mainzellisteApiKey",
						"value": "{{mainzellisteApiKey}}"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "mainzellisteApiVersion",
						"value": "{{mainzellisteApiVersion}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n\t\"type\": \"deletePatient\",\r\n \t\"data\": {\r\n\t \t\"searchIds\": [\r\n\t \t\t{\r\n\t \t\t\t\"idType\":{{idType}},\r\n\t \t\t\t\"idString\":{{idString}}\r\n\t \t\t}\r\n\t\t]\r\n \t}\r\n}"
				},
				"url": {
					"raw": "{{url}}/sessions/{{sessionId}}/tokens",
					"host": [
						"{{url}}"
					],
					"path": [
						"sessions",
						"{{sessionId}}",
						"tokens"
					]
				}
			},
			"response": []
		},
		{
			"name": "DELETE_PATIENT",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"console.log(\"Delete Patient\")",
							"",
							"var responseCodeOk = responseCode.code >= 200 && responseCode.code <= 299;",
							"if (!responseCodeOk) {",
							"    console.log(responseBody);",
							"}",
							"tests[\"Delete Patient\"] = responseCodeOk;"
						]
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "mainzellisteApiKey",
						"value": "{{mainzellisteApiKey}}"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "mainzellisteApiVersion",
						"value": "{{mainzellisteApiVersion}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{url}}/patients/{{tokenId}}/pid/{{idString}}?withDuplicates=true",
					"host": [
						"{{url}}"
					],
					"path": [
						"patients",
						"{{tokenId}}",
						"pid",
						"{{idString}}"
					],
					"query": [
						{
							"key": "withDuplicates",
							"value": "true"
						}
					]
				}
			},
			"response": []
		}
	],
	"protocolProfileBehavior": {}
}