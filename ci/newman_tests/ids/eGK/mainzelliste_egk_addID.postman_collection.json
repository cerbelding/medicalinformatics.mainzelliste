{
	"info": {
		"_postman_id": "85f41788-1e61-4757-a7bd-53b1b842af48",
		"name": "mainzelliste_egk_addID",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "NEW_SESSION - Sitzung anlegen",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"console.log(\"New Session\")",
							"",
							"var jsonBody = JSON.parse(responseBody);",
							"console.log(jsonBody);",
							"tests[\"Session created\"] = responseCode.code === 201;",
							"tests[\"Body has sessionId\"] = responseBody.has(\"sessionId\");",
							"tests[\"Body has uri\"] = responseBody.has(\"uri\");",
							"",
							"var sessionId = jsonBody.sessionId;",
							"postman.clearGlobalVariable(\"sessionId\");",
							"postman.setGlobalVariable(\"sessionId\", sessionId);",
							"",
							"",
							""
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "mainzellisteApiKey",
						"value": "{{mainzellisteApiKey}}"
					},
					{
						"key": "mainzellisteApiVersion",
						"value": "{{mainzellisteApiVersion}}"
					}
				],
				"url": {
					"raw": "{{url}}/sessions",
					"host": [
						"{{url}}"
					],
					"path": [
						"sessions"
					]
				}
			},
			"response": []
		},
		{
			"name": "TOKEN_ADD_PATIENT",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "e22234ed-f346-4829-9d66-4f36b7d8502f",
						"exec": [
							"var jsonBody = JSON.parse(responseBody);",
							"console.log(jsonBody);",
							"tests[\"Token created\"] = responseCode.code === 201;",
							"tests[\"Body has id\"] = responseBody.has(\"id\");",
							"tests[\"Type is addPatient\"] = jsonBody.type === \"addPatient\";",
							"tests[\"Body has data\"] = responseBody.has(\"data\");",
							"tests[\"Data has idTypes\"] = \"idTypes\" in jsonBody.data;",
							"",
							"var tokenId = jsonBody.id;",
							"postman.setGlobalVariable(\"tokenId\", tokenId);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "mainzellisteApiKey",
						"value": "{{mainzellisteApiKey}}"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "mainzellisteApiVersion",
						"value": "{{mainzellisteApiVersion}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n\t\"type\": \"addPatient\",\r\n     \t\"data\": {\r\n     \t\t\"idtypes\": [\"{{idTypes}}\"]\r\n    \t}\r\n}"
				},
				"url": {
					"raw": "{{url}}/sessions/{{sessionId}}/tokens",
					"host": [
						"{{url}}"
					],
					"path": [
						"sessions",
						"{{sessionId}}",
						"tokens"
					]
				}
			},
			"response": []
		},
		{
			"name": "ADD_PATIENT (JSON) - Patienten anlegen",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "190dd561-b063-48e2-b741-174ae7d50b0d",
						"exec": [
							"//Deleting unnecessary keys",
							"",
							"",
							"",
							"",
							"//Test begins here",
							"",
							"var jsonBody;",
							"",
							"",
							" var innerArraySchema = {",
							"         \"type\": \"object\",",
							"            \"required\": [\"idType\", \"idString\", \"tentative\", \"uri\"],",
							"            \"properties\":  ",
							"            {",
							"                \"idType\": {",
							"                    \"type\": \"string\"",
							"                },",
							"                \"idString\":{",
							"                    \"type\": \"string\",",
							"                },",
							"                \"tentative\": {",
							"                    \"type\": \"boolean\",",
							"                },",
							"                \"uri\": {",
							"                    \"type\": \"string\"",
							"                }",
							"            }",
							"        ",
							"    }",
							"",
							"",
							"var Ajv = require('ajv'),",
							"    ajv = new Ajv({logger: console}),",
							"    schema = {",
							"        \"type\": \"array\",",
							"       \"items\" : {",
							"                \"#ref\": innerArraySchema",
							"           ",
							"       }};",
							"            ",
							"            ",
							"   ",
							"",
							"",
							"",
							"pm.test('response must be valid and have a body', function() {",
							"    pm.response.to.have.status(201);",
							"    pm.response.to.be.withBody;",
							"    pm.response.to.be.json; ",
							"     ",
							"    ",
							"});",
							"",
							"",
							"pm.test(\"response have correct scheme\", function() {",
							"    var localBody =  pm.response.json();",
							"    pm.expect(ajv.validate(schema, localBody )).to.be.true;",
							"    jsonBody = localBody;",
							"    console.log(jsonBody);",
							"    ",
							"    ",
							"});",
							"",
							"",
							"",
							"",
							"",
							"",
							"if(jsonBody){",
							"  ",
							"   ",
							"    var patients = pm.variables.get(\"patients\");",
							"    ",
							"   ",
							"    ",
							"    ",
							"    if(!patients){",
							"         ",
							"        patients = []",
							"    }",
							"    ",
							"    var ids = jsonBody",
							"    ",
							"  ",
							"    ",
							"    newPatient = {",
							"        ",
							"        \"ids\": ids,",
							"        \"fields\":request.data",
							"      ",
							"    }",
							"    ",
							"    ",
							"    ",
							"    patients.push(newPatient);",
							"    pm.collectionVariables.set('patients', patients);",
							"    pm.collectionVariables.set('idString', jsonBody[0].idString);",
							"    ",
							"  ",
							"    ",
							"    ",
							"}",
							"",
							"",
							"",
							"",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "be153999-27fa-46fa-ab59-ac3412c8faf8",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "mainzellisteApiKey",
						"value": "{{mainzellisteApiKey}}"
					},
					{
						"key": "Content-Type",
						"value": "application/x-www-form-urlencoded"
					},
					{
						"key": "mainzellisteApiVersion",
						"value": "{{mainzellisteApiVersion}}"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "vorname",
							"value": "{{vorname}}",
							"type": "text"
						},
						{
							"key": "nachname",
							"value": "{{nachname}}",
							"type": "text"
						},
						{
							"key": "geburtsname",
							"value": "{{geburtsname}}",
							"type": "text"
						},
						{
							"key": "geburtstag",
							"value": "{{geburtstag}}",
							"type": "text"
						},
						{
							"key": "geburtsmonat",
							"value": "{{geburtsmonat}}",
							"type": "text"
						},
						{
							"key": "geburtsjahr",
							"value": "{{geburtsjahr}}",
							"type": "text"
						},
						{
							"key": "plz",
							"value": "{{plz}}",
							"type": "text"
						},
						{
							"key": "ort",
							"value": "{{ort}}",
							"type": "text"
						},
						{
							"key": "egk",
							"value": "T019468877",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{url}}/patients?tokenId={{tokenId}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"patients"
					],
					"query": [
						{
							"key": "tokenId",
							"value": "{{tokenId}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "TOKEN_READ_PATIENT (Get Patient with specific extid)",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "afc6991e-ec85-4280-a825-70ac6bf6d7ea",
						"exec": [
							"var jsonBody = JSON.parse(responseBody);",
							"console.log(jsonBody);",
							"tests[\"Token created\"] = responseCode.code === 201;",
							"tests[\"Body has id\"] = responseBody.has(\"id\");",
							"tests[\"Type is readPatients\"] = jsonBody.type === \"readPatients\";",
							"tests[\"Body has data\"] = responseBody.has(\"data\");",
							"",
							"var tokenId = jsonBody.id;",
							"postman.setGlobalVariable(\"tokenId\", tokenId);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "mainzellisteApiKey",
						"value": "{{mainzellisteApiKey}}"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "mainzellisteApiVersion",
						"value": "{{mainzellisteApiVersion}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n\t\"type\": \"readPatients\",\r\n \t\"data\": {\r\n\t \t\"searchIds\": [\r\n\t \t\t{\r\n\t \t\t\t\"idType\":\"egk\",\r\n\t \t\t\t\"idString\":\"T019468877\"\r\n\t \t\t}\r\n\t\t],\r\n\t\t\"resultFields\":[\"vorname\",\"nachname\",\"geburtsname\",\"geburtsjahr\",\"ort\",\"plz\",\"geburtstag\",\"geburtsmonat\"],\r\n\t\t\"resultIds\":[\"egk\", \"intid\", \"pid\"]\r\n\r\n \t}\r\n}"
				},
				"url": {
					"raw": "{{url}}/sessions/{{sessionId}}/tokens",
					"host": [
						"{{url}}"
					],
					"path": [
						"sessions",
						"{{sessionId}}",
						"tokens"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET_PATIENT",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "8a8d671e-833f-477a-80ae-966f3ce1c178",
						"exec": [
							"var jsonBody = JSON.parse(responseBody);",
							"console.log(jsonBody);",
							"",
							"",
							"",
							"var innerArraySchema = {",
							"    \"type\": \"object\",",
							"    \"required\": [\"idType\", \"idString\", \"tentative\", \"uri\"],",
							"    \"properties\": {",
							"        \"fields\": {",
							"            \"type\": \"object\",",
							"",
							"        },",
							"        \"ids\": {",
							"            \"type\": \"array\",",
							"            \"items\": {",
							"                \"type\": \"object\",",
							"                \"properties\": {",
							"                    \"idType\": {",
							"                        \"type\": \"string\"",
							"                    },",
							"                    \"idString\": {",
							"                        \"type\": \"string\"",
							"                    }",
							"",
							"                }",
							"",
							"            }",
							"        }",
							"",
							"",
							"    }",
							"",
							"}",
							"",
							"",
							"var Ajv = require('ajv'),",
							"    ajv = new Ajv({",
							"        logger: console",
							"    }),",
							"    schema = {",
							"        \"type\": \"array\",",
							"        \"items\": {",
							"            \"#ref\": innerArraySchema",
							"",
							"        }",
							"    };",
							"",
							"pm.test('response must be valid and have a valid scheme body', function() {",
							"    pm.response.to.have.status(200);",
							"    pm.response.to.be.withBody;",
							"    pm.response.to.be.json;",
							"    var localBody = pm.response.json();",
							"    pm.expect(ajv.validate(schema, localBody)).to.be.true;",
							"",
							"",
							"",
							"",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "mainzellisteApiKey",
						"value": "{{mainzellisteApiKey}}"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "mainzellisteApiVersion",
						"value": "{{mainzellisteApiVersion}}"
					}
				],
				"url": {
					"raw": "{{url}}/patients/tokenId/{{tokenId}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"patients",
						"tokenId",
						"{{tokenId}}"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "45d3ca58-ec34-46ae-8e8b-befa7bcb05cc",
				"type": "text/javascript",
				"exec": [
					"pm.collectionVariables.set(\"idString\", \"0007W0W9\");"
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "44ea8dbe-007d-4bd2-b93c-e1e62c5f443d",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"protocolProfileBehavior": {}
}