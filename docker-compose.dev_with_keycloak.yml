## This compose file provides a basic configuration for running mainzelliste as a developer.
## To use this configuration copy its contents to docker-compose.override.yml.
## You can refer to docker.md and docker-compose.user.yml for further configuration options.
version: '3.1'

volumes:
  mysql_data:
    driver: local

services:
  db:
    ports:
      - 5433:5432
  mainzelliste:
    build:
      context: .
  ## If you want to build the image behind a proxy, it is necessary to provide a proxy as build argument
      # args:
        # - http_proxy=http://<your-proxy-host>:<your-proxy-port>
  ## To reach the mainzelliste outside of docker you will need to expose a port to your localhost
    ports:
      - 8080:8080
  ## Some IDEs provide support for remote debugging java application. 
  ## With this, it is possible to debug mainzelliste while running it inside a container:
      - 1099:1099
    environment:
      - DEBUG=true
  mysql:
    image: mysql:5.7
    volumes:
      - mysql_data:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: keycloak
      MYSQL_USER: keycloak
      MYSQL_PASSWORD: password
  keycloak:
    image: jboss/keycloak:latest
    volumes:
      - /home/franco/test/new/cert.pem:/etc/x509/https/tls.crt
      - /home/franco/test/new/key.pem:/etc/x509/https/tls.key
    environment:
      DB_VENDOR: MYSQL
      DB_ADDR: mysql
      DB_DATABASE: keycloak
      DB_USER: keycloak
      DB_PASSWORD: password
      KEYCLOAK_USER: admin
      KEYCLOAK_PASSWORD: admin,
      JDBC_PARAMS: "useSSL=true"
      # Uncomment the line below if you want to specify JDBC parameters. The parameter below is just an example, and it shouldn't be used in production without knowledge. It is highly recommended that you read the MySQL JDBC driver documentation in order to use it.
      #JDBC_PARAMS: "connectTimeout=30000"
    depends_on:
      - mysql